{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.initialState = JSON.parse(JSON.stringify(initialState));\n        this.board = JSON.parse(JSON.stringify(initialState));\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    var _this = this, _loop = function() {\n                        var row = _step.value;\n                        var _row;\n                        var nonZeroNumber = row.filter(function(x) {\n                            return x !== 0;\n                        });\n                        var result = [];\n                        var i = 0;\n                        while(i < nonZeroNumber.length)if (i < nonZeroNumber.length - 1 && nonZeroNumber[i] === nonZeroNumber[i + 1]) {\n                            result.push(nonZeroNumber[i] * 2);\n                            _this.score += nonZeroNumber[i] * 2;\n                            i += 2;\n                        } else {\n                            result.push(nonZeroNumber[i]);\n                            i++;\n                        }\n                        while(result.length < row.length)result.push(0);\n                        if (result.toString() !== row.toString()) moved = true;\n                        (_row = row).splice.apply(_row, [\n                            0,\n                            row.length\n                        ].concat((0, $227c6742e0ff6f82$export$71511d61b312f219)(result)));\n                    };\n                    for(var _iterator = this.board[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop();\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                if (moved) {\n                    this.addNumber();\n                    this.checkGameOver();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    var _this = this, _loop = function() {\n                        var row = _step.value;\n                        var _row;\n                        var nonZeroNumber = row.filter(function(x) {\n                            return x !== 0;\n                        });\n                        var result = [];\n                        var i = 0;\n                        while(i < nonZeroNumber.length)if (i < nonZeroNumber.length - 1 && nonZeroNumber[i] === nonZeroNumber[i + 1]) {\n                            result.push(nonZeroNumber[i] * 2);\n                            _this.score += nonZeroNumber[i] * 2;\n                            i += 2;\n                        } else {\n                            result.push(nonZeroNumber[i]);\n                            i++;\n                        }\n                        while(result.length < row.length)result.unshift(0);\n                        if (result.toString() !== row.toString()) moved = true;\n                        (_row = row).splice.apply(_row, [\n                            0,\n                            row.length\n                        ].concat((0, $227c6742e0ff6f82$export$71511d61b312f219)(result)));\n                    };\n                    for(var _iterator = this.board[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop();\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                if (moved) {\n                    this.addNumber();\n                    this.checkGameOver();\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(col) {\n                    var newRow = _this.board.map(function(row) {\n                        return row[col];\n                    });\n                    transposed.push(newRow);\n                };\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                var transposed = [];\n                for(var col = 0; col < this.board[0].length; col++)_loop(col);\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    var _this1 = this, _loop1 = function() {\n                        var col = _step.value;\n                        var _col;\n                        var nonZeroNumberCol = col.filter(function(x) {\n                            return x !== 0;\n                        });\n                        var result = [];\n                        var i = 0;\n                        while(i < nonZeroNumberCol.length)if (i < nonZeroNumberCol.length - 1 && nonZeroNumberCol[i] === nonZeroNumberCol[i + 1]) {\n                            result.push(nonZeroNumberCol[i] * 2);\n                            _this1.score += nonZeroNumberCol[i] * 2;\n                            i += 2;\n                        } else {\n                            result.push(nonZeroNumberCol[i]);\n                            i++;\n                        }\n                        while(result.length < col.length)result.push(0);\n                        if (!moved && col.some(function(value, index) {\n                            return value !== result[index];\n                        })) moved = true;\n                        (_col = col).splice.apply(_col, [\n                            0,\n                            col.length\n                        ].concat((0, $227c6742e0ff6f82$export$71511d61b312f219)(result)));\n                    };\n                    for(var _iterator = transposed[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop1();\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                this.board = transposed[0].map(function(_, i) {\n                    return transposed.map(function(row) {\n                        return row[i];\n                    });\n                });\n                if (moved) {\n                    this.addNumber();\n                    this.checkGameOver();\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this, _loop = function(col) {\n                    var newRow = _this.board.map(function(row) {\n                        return row[col];\n                    });\n                    transposed.push(newRow);\n                };\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                var transposed = [];\n                for(var col = 0; col < this.board[0].length; col++)_loop(col);\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    var _this1 = this, _loop1 = function() {\n                        var col = _step.value;\n                        var _col;\n                        var nonZeroNumberCol = col.filter(function(x) {\n                            return x !== 0;\n                        });\n                        var result = [];\n                        var i = 0;\n                        while(i < nonZeroNumberCol.length)if (i < nonZeroNumberCol.length - 1 && nonZeroNumberCol[i] === nonZeroNumberCol[i + 1]) {\n                            result.push(nonZeroNumberCol[i] * 2);\n                            _this1.score += nonZeroNumberCol[i] * 2;\n                            i += 2;\n                        } else {\n                            result.push(nonZeroNumberCol[i]);\n                            i++;\n                        }\n                        while(result.length < col.length)result.unshift(0);\n                        if (!moved && col.some(function(value, index) {\n                            return value !== result[index];\n                        })) moved = true;\n                        (_col = col).splice.apply(_col, [\n                            0,\n                            col.length\n                        ].concat((0, $227c6742e0ff6f82$export$71511d61b312f219)(result)));\n                    };\n                    for(var _iterator = transposed[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop1();\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                this.board = transposed[0].map(function(_, i) {\n                    return transposed.map(function(row) {\n                        return row[i];\n                    });\n                });\n                if (moved) {\n                    this.addNumber();\n                    this.checkGameOver();\n                }\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.addNumber();\n                this.addNumber();\n            }\n        },\n        {\n            key: \"addNumber\",\n            value: function addNumber() {\n                var emptyCells = [];\n                this.board.forEach(function(row, rowIndex) {\n                    row.forEach(function(cell, colIndex) {\n                        if (cell === 0) emptyCells.push({\n                            row: rowIndex,\n                            col: colIndex\n                        });\n                    });\n                });\n                if (emptyCells.length > 0) {\n                    var randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n                    var randomValue = Math.random() < 0.9 ? 2 : 4;\n                    this.board[randomCell.row][randomCell.col] = randomValue;\n                }\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = JSON.parse(JSON.stringify(this.initialState));\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            key: \"checkGameOver\",\n            value: function checkGameOver() {\n                if (this.board.some(function(row) {\n                    return row.includes(2048);\n                })) {\n                    this.status = \"win\";\n                    return;\n                }\n                if (this.board.some(function(row) {\n                    return row.includes(0);\n                })) return false;\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    var value = this.board[row][col];\n                    if (row > 0 && this.board[row - 1][col] === value || row < 3 && this.board[row + 1][col] === value || col > 0 && this.board[row][col - 1] === value || col < 3 && this.board[row][col + 1] === value) return false;\n                }\n                this.status = \"lose\";\n                return true;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$game = new (0, (/*@__PURE__*/$parcel$interopDefault($3d28d7f1aac198f5$exports)))();\nvar $197cd56b15c33885$var$gameField = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nfunction $197cd56b15c33885$var$renderBoard() {\n    var state = $197cd56b15c33885$var$game.getState();\n    var rows = $197cd56b15c33885$var$gameField.querySelectorAll(\".field-row\");\n    rows.forEach(function(row, rowIndex) {\n        var cells = row.querySelectorAll(\".field-cell\");\n        cells.forEach(function(cell, cellIndex) {\n            var value = state[rowIndex][cellIndex];\n            cell.textContent = value === 0 ? \"\" : value;\n            cell.className = \"field-cell\";\n            if (value !== 0) cell.classList.add(\"field-cell--\".concat(value));\n        });\n    });\n    $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$game.getScore();\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    if (gameStatus === \"win\") {\n        $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    } else if (gameStatus === \"lose\") {\n        $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    } else {\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    }\n}\ndocument.addEventListener(\"keydown\", function(keyboardEvent) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    switch(keyboardEvent.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    $197cd56b15c33885$var$renderBoard();\n});\nfunction $197cd56b15c33885$var$startGame() {\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$renderBoard();\n    $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n    $197cd56b15c33885$var$startButton.classList.remove(\"start\");\n    $197cd56b15c33885$var$startButton.classList.add(\"restart\");\n}\nfunction $197cd56b15c33885$var$restartGame() {\n    $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$renderBoard();\n    $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$startButton.textContent = \"Start\";\n    $197cd56b15c33885$var$startButton.classList.remove(\"restart\");\n    $197cd56b15c33885$var$startButton.classList.add(\"start\");\n}\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$startButton.classList.contains(\"start\")) $197cd56b15c33885$var$startGame();\n    else $197cd56b15c33885$var$restartGame();\n});\n$197cd56b15c33885$var$renderBoard();\n\n})();\n//# sourceMappingURL=index.b4f07824.js.map\n","'use strict';\n\nimport Game from '../modules/Game.class.js';\n\nconst game = new Game();\n\nconst gameField = document.querySelector('.game-field');\nconst gameScore = document.querySelector('.game-score');\nconst startButton = document.querySelector('.button.start');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nfunction renderBoard() {\n  const state = game.getState();\n\n  const rows = gameField.querySelectorAll('.field-row');\n\n  rows.forEach((row, rowIndex) => {\n    const cells = row.querySelectorAll('.field-cell');\n\n    cells.forEach((cell, cellIndex) => {\n      const value = state[rowIndex][cellIndex];\n\n      cell.textContent = value === 0 ? '' : value;\n      cell.className = 'field-cell';\n\n      if (value !== 0) {\n        cell.classList.add(`field-cell--${value}`);\n      }\n    });\n  });\n\n  gameScore.textContent = game.getScore();\n\n  const gameStatus = game.getStatus();\n\n  if (gameStatus === 'win') {\n    messageWin.classList.remove('hidden');\n    messageLose.classList.add('hidden');\n  } else if (gameStatus === 'lose') {\n    messageLose.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n  } else {\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n  }\n}\n\ndocument.addEventListener('keydown', (keyboardEvent) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  switch (keyboardEvent.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    default:\n      return;\n  }\n\n  renderBoard();\n});\n\nfunction startGame() {\n  game.start();\n  renderBoard();\n\n  messageStart.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n\n  startButton.textContent = 'Restart';\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n}\n\nfunction restartGame() {\n  game.restart();\n  renderBoard();\n\n  messageStart.classList.remove('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n\n  startButton.textContent = 'Start';\n  startButton.classList.remove('restart');\n  startButton.classList.add('start');\n}\n\nstartButton.addEventListener('click', () => {\n  if (startButton.classList.contains('start')) {\n    startGame();\n  } else {\n    restartGame();\n  }\n});\n\nrenderBoard();\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = JSON.parse(JSON.stringify(initialState));\n    this.board = JSON.parse(JSON.stringify(initialState));\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (const row of this.board) {\n      const nonZeroNumber = row.filter((x) => x !== 0);\n      const result = [];\n      let i = 0;\n\n      while (i < nonZeroNumber.length) {\n        if (\n          i < nonZeroNumber.length - 1 &&\n          nonZeroNumber[i] === nonZeroNumber[i + 1]\n        ) {\n          result.push(nonZeroNumber[i] * 2);\n          this.score += nonZeroNumber[i] * 2;\n          i += 2;\n        } else {\n          result.push(nonZeroNumber[i]);\n          i++;\n        }\n      }\n\n      while (result.length < row.length) {\n        result.push(0);\n      }\n\n      if (result.toString() !== row.toString()) {\n        moved = true;\n      }\n      row.splice(0, row.length, ...result);\n    }\n\n    if (moved) {\n      this.addNumber();\n      this.checkGameOver();\n    }\n  }\n\n  moveRight() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (const row of this.board) {\n      const nonZeroNumber = row.filter((x) => x !== 0);\n      const result = [];\n      let i = 0;\n\n      while (i < nonZeroNumber.length) {\n        if (\n          i < nonZeroNumber.length - 1 &&\n          nonZeroNumber[i] === nonZeroNumber[i + 1]\n        ) {\n          result.push(nonZeroNumber[i] * 2);\n          this.score += nonZeroNumber[i] * 2;\n          i += 2;\n        } else {\n          result.push(nonZeroNumber[i]);\n          i++;\n        }\n      }\n\n      while (result.length < row.length) {\n        result.unshift(0);\n      }\n\n      if (result.toString() !== row.toString()) {\n        moved = true;\n      }\n      row.splice(0, row.length, ...result);\n    }\n\n    if (moved) {\n      this.addNumber();\n      this.checkGameOver();\n    }\n  }\n\n  moveUp() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n    const transposed = [];\n\n    for (let col = 0; col < this.board[0].length; col++) {\n      const newRow = this.board.map((row) => row[col]);\n\n      transposed.push(newRow);\n    }\n\n    for (const col of transposed) {\n      const nonZeroNumberCol = col.filter((x) => x !== 0);\n      const result = [];\n      let i = 0;\n\n      while (i < nonZeroNumberCol.length) {\n        if (\n          i < nonZeroNumberCol.length - 1 &&\n          nonZeroNumberCol[i] === nonZeroNumberCol[i + 1]\n        ) {\n          result.push(nonZeroNumberCol[i] * 2);\n          this.score += nonZeroNumberCol[i] * 2;\n          i += 2;\n        } else {\n          result.push(nonZeroNumberCol[i]);\n          i++;\n        }\n      }\n\n      while (result.length < col.length) {\n        result.push(0);\n      }\n\n      if (!moved && col.some((value, index) => value !== result[index])) {\n        moved = true;\n      }\n      col.splice(0, col.length, ...result);\n    }\n\n    this.board = transposed[0].map((_, i) => transposed.map((row) => row[i]));\n\n    if (moved) {\n      this.addNumber();\n      this.checkGameOver();\n    }\n  }\n\n  moveDown() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n    const transposed = [];\n\n    for (let col = 0; col < this.board[0].length; col++) {\n      const newRow = this.board.map((row) => row[col]);\n\n      transposed.push(newRow);\n    }\n\n    for (const col of transposed) {\n      const nonZeroNumberCol = col.filter((x) => x !== 0);\n      const result = [];\n      let i = 0;\n\n      while (i < nonZeroNumberCol.length) {\n        if (\n          i < nonZeroNumberCol.length - 1 &&\n          nonZeroNumberCol[i] === nonZeroNumberCol[i + 1]\n        ) {\n          result.push(nonZeroNumberCol[i] * 2);\n          this.score += nonZeroNumberCol[i] * 2;\n          i += 2;\n        } else {\n          result.push(nonZeroNumberCol[i]);\n          i++;\n        }\n      }\n\n      while (result.length < col.length) {\n        result.unshift(0);\n      }\n\n      if (!moved && col.some((value, index) => value !== result[index])) {\n        moved = true;\n      }\n\n      col.splice(0, col.length, ...result);\n    }\n\n    this.board = transposed[0].map((_, i) => transposed.map((row) => row[i]));\n\n    if (moved) {\n      this.addNumber();\n      this.checkGameOver();\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = 'playing';\n    this.addNumber();\n    this.addNumber();\n  }\n\n  addNumber() {\n    const emptyCells = [];\n\n    this.board.forEach((row, rowIndex) => {\n      row.forEach((cell, colIndex) => {\n        if (cell === 0) {\n          emptyCells.push({ row: rowIndex, col: colIndex });\n        }\n      });\n    });\n\n    if (emptyCells.length > 0) {\n      const randomCell =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n      const randomValue = Math.random() < 0.9 ? 2 : 4;\n\n      this.board[randomCell.row][randomCell.col] = randomValue;\n    }\n  }\n\n  restart() {\n    this.board = JSON.parse(JSON.stringify(this.initialState));\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  checkGameOver() {\n    if (this.board.some((row) => row.includes(2048))) {\n      this.status = 'win';\n\n      return;\n    }\n\n    if (this.board.some((row) => row.includes(0))) {\n      return false;\n    }\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const value = this.board[row][col];\n\n        if (\n          (row > 0 && this.board[row - 1][col] === value) ||\n          (row < 3 && this.board[row + 1][col] === value) ||\n          (col > 0 && this.board[row][col - 1] === value) ||\n          (col < 3 && this.board[row][col + 1] === value)\n        ) {\n          return false;\n        }\n      }\n    }\n\n    this.status = 'lose';\n\n    return true;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["a","$3d28d7f1aac198f5$exports","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","JSON","parse","stringify","board","score","status","key","value","moved","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_this","_iterator","next","done","_loop","row","nonZeroNumber","filter","x","result","push","splice","apply","concat","err","return","addNumber","checkGameOver","unshift","col","newRow","map","transposed","_this1","_loop1","nonZeroNumberCol","some","index","_","emptyCells","forEach","rowIndex","cell","colIndex","randomCell","Math","floor","random","randomValue","includes","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","__esModule","default","$197cd56b15c33885$var$gameField","document","querySelector","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$startButton","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$renderBoard","state","getState","rows","querySelectorAll","cells","cellIndex","textContent","className","classList","add","getScore","gameStatus","getStatus","remove","addEventListener","keyboardEvent","moveLeft","moveRight","moveUp","moveDown","contains","start","restart"],"version":3,"file":"index.b4f07824.js.map"}